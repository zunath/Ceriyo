<UserControl x:Class="Ceriyo.Server.WPF.Views.DetailsView.Details"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:extension="clr-namespace:Ceriyo.Infrastructure.WPF.Extensions;assembly=Ceriyo.Infrastructure.WPF"
             xmlns:constants="clr-namespace:Ceriyo.Core.Constants;assembly=Ceriyo.Core"
             xmlns:controls="clr-namespace:Ceriyo.Infrastructure.WPF.Controls;assembly=Ceriyo.Infrastructure.WPF"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:Ceriyo.Infrastructure.WPF.Converters;assembly=Ceriyo.Infrastructure.WPF"
             mc:Ignorable="d"
             d:DesignHeight="370"
             d:DesignWidth="600"
             Background="LightGray"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="inverse" />

    </UserControl.Resources>
    

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding NoModuleNotification, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="90"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="90"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="32"></RowDefinition>
        </Grid.RowDefinitions>

        <Label
            Grid.Column="4"
            Grid.Row="0"
            Content="{Binding IPAddress}">
            
        </Label>
        
        <Label 
            Grid.Column="1"
            Grid.Row="0">
            Server Name:
        </Label>

        <TextBox
            Margin="10,4,5,4"
            Grid.Column="2"
            Grid.Row="0"
            Text="{Binding Settings.ServerName}"
            Grid.ColumnSpan="2">
        </TextBox>

        <Label
            Grid.Column="1"
            Grid.Row="1">
            Module:
        </Label>

        <ComboBox
            Margin="10,4,5,4"
            Grid.Column="2"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            IsEnabled="{Binding IsServerRunning, Converter={StaticResource inverse}}"
            ItemsSource="{Binding Modules}"
            SelectedItem="{Binding SelectedModule}">
        </ComboBox>
        
        <Label
            Grid.Column="4"
            Grid.Row="1">
            Port:
        </Label>

        <controls:IntegerUpDownEx
            Margin="10,4,5,4"
            Grid.Column="5"
            Grid.Row="1"
            Minimum="0"
            Maximum="{Binding MaximumPortNumber}"
            Value="{Binding Settings.Port}"
            IsEnabled="{Binding IsServerRunning, Converter={StaticResource inverse}}">
        </controls:IntegerUpDownEx>

        <Label
            Margin="0,6,0,0"
            Grid.Column="1"
            Grid.Row="2">
            Players:
        </Label>
        
        <Label
            Margin="0,6,0,0"
            Grid.Column="3"
            Grid.Row="2">
            Game Type:
        </Label>
        
        <Label
            Grid.Column="4"
            Grid.Row="2">
            PVP:
        </Label>

        <ComboBox
            Margin="10,4,5,4"
            Grid.Column="5"
            Grid.Row="2"
            ItemsSource="{Binding Source={extension:EnumBindingSource {x:Type constants:PVPType}}}"
            SelectedItem="{Binding Settings.PVPType}">
            
        </ComboBox>
        
        <ListBox
            Grid.Row="3"
            Grid.Column="1"
            Grid.RowSpan="4"
            Grid.ColumnSpan="2"
            ItemsSource="{Binding Players}"
            SelectedItem="{Binding SelectedPlayer}"
            SelectionMode="Single">
            
        </ListBox>
        
        <ListBox
            Margin="5,0,0,0"
            Grid.Column="3"
            Grid.Row="3"
            Grid.RowSpan="4"
            ItemsSource="{Binding Source={extension:EnumBindingSource {x:Type constants:GameCategory}}}"
            SelectedItem="{Binding Settings.GameCategory}"
            SelectionMode="Single">
            
        </ListBox>
        
        <Label
            Grid.Column="4"
            Grid.Row="3">
            Max Players:
        </Label>

        <controls:IntegerUpDownEx
            Margin="10,4,5,4"
            Grid.Column="5"
            Grid.Row="3"
            Minimum="1"
            Maximum="{Binding MaximumPlayers}"
            Value="{Binding Settings.MaxPlayers}">
        </controls:IntegerUpDownEx>
        
        <CheckBox
            Margin="5,15,0,0"
            Grid.Row="4"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            IsChecked="{Binding Settings.AllowCharacterDeletion}">
            Allow Character Deletion
        </CheckBox>
        
        <CheckBox
            Margin="5,5,0,0"
            Grid.Row="5"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            IsChecked="{Binding Settings.AllowFileDownloading}">
            Allow File Downloading
        </CheckBox>
    
        <Button
            Margin="3,3,3,3"
            Grid.Row="7"
            Grid.Column="1"
            Command="{Binding BanAccountCommand}"
            IsEnabled="{Binding IsServerRunning}">
            Ban Account
        </Button>

        <Button
            Margin="3,3,3,3"
            Grid.Row="7"
            Grid.Column="2"
            Command="{Binding BootPlayerCommand}"
            IsEnabled="{Binding IsServerRunning}">
            Boot Player
        </Button>

        <Label
            Margin="20,5,0,0"
            Grid.Row="7"
            Grid.Column="3">
            Player Password:
        </Label>

        <TextBox
            Margin="10,4,5,4"
            Grid.Row="7"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            Text="{Binding Settings.PlayerPassword}">
            
        </TextBox>


        <Label
            Margin="30,5,0,0"
            Grid.Row="8"
            Grid.Column="3">
            GM Password:
        </Label>

        <TextBox
            Margin="10,4,5,4"
            Grid.Row="8"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            Text="{Binding Settings.GMPassword}">
            
        </TextBox>

        <Label
            Grid.Column="1"
            Grid.Row="9"
            Grid.ColumnSpan="2">
            Server Message:
        </Label>
        
        <TextBox
            Margin="10,4,5,4"
            Grid.Column="2"
            Grid.Row="9"
            Grid.ColumnSpan="3"
            Text="{Binding ServerMessage}"
            IsEnabled="{Binding IsServerRunning}">
            
        </TextBox>

        <Button
            Margin="10,4,5,4"
            Grid.Column="5"
            Grid.Row="9"
            Command="{Binding SendMessageCommand}"
            IsEnabled="{Binding IsServerRunning}">
            Send Message
        </Button>

        <Label
            Grid.Column="1"
            Grid.Row="10">
            Server Status:
        </Label>

        <TextBox
            Margin="10,4,5,4"
            Grid.Column="2"
            Grid.Row="10"
            Grid.ColumnSpan="2"
            IsReadOnly="True"
            Text="{Binding ServerStatus}">
            
        </TextBox>

        <Button
            Margin="0,4,5,4"
            Grid.Column="4"
            Grid.Row="10"
            Command="{Binding SaveSettingsCommand}">
            Save Settings
        </Button>


        <Button
            Margin="10,4,5,4"
            Grid.Column="5"
            Grid.Row="10"
            Command="{Binding ToggleServerCommand}"
            Content="{Binding StartStopServerButtonText}">
            
        </Button>


    </Grid>
</UserControl>

    

    